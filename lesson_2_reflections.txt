What happens when you initialize a repository? Why do you need to do it?

	it creates a repository for you new project, where all the files and commits are going to 		be stored.

How is the staging area different from the working directory and the repository? What value do you think it offers?

	it is a stage where you can decide if you are going to add or not something to your next 		commit, it may be usefull to decide wheter something can be divided intwo two or more 		commits. 

How can you use the staging area to make sure you have one commit per logical change?

	you can check if you added just the file you want to commit with the changes. if you added 		one more by mistake you can clear but be very carefull to save the changes before clearing 		the commits.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

	If you create a different version of your game, lets say in a different world, or make 		dramatic changes that you want to keep away from the original version you can do this by 		branching this way you keep different versions of your code separated.

How do the diagrams help you visualize the branch structure?

	it helps by showing where the commits are located in a specific branch, how it affects its 		reachability and where are you located at the moment.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

	The result is a combination of the two branches, leaving the original files and only 		adding or deleting the lines that should be added or deleted.
	we represent it in two lines because its a different file that came out of the same 		father, but with different code, and when you merge it its a combination of the two 		branches.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

	Automatic mergin, pros: you don't loose time choosing what to merge, cons, it gives 		conflicts because its not smart enough to figure out if it show merge some code. 
	Always doing merges manually would be very time consuming but it would give you access to 		every aspect of the merge.
